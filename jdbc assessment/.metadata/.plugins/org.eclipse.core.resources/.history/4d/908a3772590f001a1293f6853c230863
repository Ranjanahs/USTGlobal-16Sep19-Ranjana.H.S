package com.ustglobal.MobileApp.Dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.ustglobal.MobileApp.Dto.MobileBean;

public class MobileDaoImpl implements MobileDao {
 
	String url = "jdbc:mysql://localhost:3306/contact?user=root&password=root";
	
	public List<MobileBean> showContacts() {
		String sql = "select * from contact";
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		try {
			conn = DriverManager.getConnection(url);
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql);
			ArrayList<MobileBean> res = new ArrayList<MobileBean>();
			while(rs.next()) {
				MobileBean bean = new MobileBean();
				bean.setName(rs.getString("name"));
				bean.setNumber(rs.getInt("number"));
				bean.setGroups(rs.getString("groups"));
				res.add(bean);
			}
			return res;
		}catch(Exception e) {
			e.printStackTrace();
			return null;
		}finally {
			try {
				if(conn!=null) {
					conn.close();
				}
				if(stmt!=null) {
					stmt.close();
				}
				if(rs!=null) {
					rs.close();
				}
			}catch(Exception e) {
				e.printStackTrace();
				}
		}
		
	}

	public MobileBean searchContacts(String name) {
		String sql = "select * from contact where name=?";
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			conn = DriverManager.getConnection(url);
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, name);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				MobileBean bean = new MobileBean();
				bean.setName(rs.getString("name"));
				bean.setNumber(rs.getInt("number"));
				bean.setGroups(rs.getString("groups"));
			}else {
				return null;
			}
			
		}catch(Exception e) {
			e.printStackTrace();
			return null;
		}finally {
			try {
				if(conn!=null) {
					conn.close();
				}
				if(pstmt!=null) {
					pstmt.close();
				}
				if(rs!=null) {
					rs.close();
				}
			}catch(Exception e) {
				e.printStackTrace();
				}
		}
		
		
		return null;
	}

	public int insert(MobileBean bean) {
		String sql = "insert into contact values(?,?,?,?)";
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			String name = bean.getName();
			int number = bean.getNumber();
			String groups = bean.getGroups();
			
			Class.forName("com.mysql.jdbc.Driver");
			conn = DriverManager.getConnection(url);
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, name);
			pstmt.setInt(2, number);
			pstmt.setString(3, groups);
			int count = pstmt.executeUpdate();
			return count;
						
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(conn!=null) {
					conn.close();
				}
				if(pstmt!=null) {
					pstmt.close();
				}
				
			}catch(Exception e) {
				e.printStackTrace();
				}
		}
		
		return(Integer) null;
	}

	
	public int update(MobileBean bean) {
		String sql = "update into contact values set number=?,groups=? where name=?";
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			String name = bean.getName();
			int number = bean.getNumber();
			String groups = bean.getGroups();
			
			Class.forName("com.mysql.jdbc.Driver");
			conn = DriverManager.getConnection(url);
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(3, name);
			pstmt.setInt(1, number);
			pstmt.setString(2, groups);
			int count = pstmt.executeUpdate();
			return count;
						
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(conn!=null) {
					conn.close();
				}
				if(pstmt!=null) {
					pstmt.close();
				}
				
			}catch(Exception e) {
				e.printStackTrace();
				}
		}
		
		return(Integer) null;
	}	
	
	public int delete(MobileBean bean) {
		String sql = "delete from contact where name=?";
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			String name = bean.getName();
			int number = bean.getNumber();
			String groups = bean.getGroups();
			
			Class.forName("com.mysql.jdbc.Driver");
			conn = DriverManager.getConnection(url);
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, name);
			int count = pstmt.executeUpdate();
			return count;
						
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(conn!=null) {
					conn.close();
				}
				if(pstmt!=null) {
					pstmt.close();
				}
				
			}catch(Exception e) {
				e.printStackTrace();
				}
		}
		
		return(Integer) null;
	}	
	}


